import { CURRENT_VERSION } from "../types/savedata/saveData";
import { UNICODE_PLANES_ALL } from "./unicodePlanes";
import { UNICODE_CHARACTER_CATEGORIES } from "./unicodeCharacterCategories";
const DATA_DEFAULTS = {
    planes: [
        0,
        // 1,
        // 2,
        // 3,
        // 14,
        // 15,
        // 16
    ],
    categories: [
        "L",
        // "M",
        "N",
        "P",
        "S",
        // "Z",
        // "C",
    ],
};
export function initializationData() {
    return {
        initialized: false,
        version: CURRENT_VERSION,
        settings: {
            initialized: false,
            modified: false,
            filter: {
                planes: UNICODE_PLANES_ALL.map(plane => (Object.assign(Object.assign({}, plane.interval), { blocks: plane.blocks.map(block => (Object.assign(Object.assign({}, block.interval), { included: DATA_DEFAULTS.planes.includes(plane.planeNumber) }))) }))),
                categoryGroups: UNICODE_CHARACTER_CATEGORIES.map(group => ({
                    abbreviation: group.abbreviation,
                    categories: group.categories.map(category => ({
                        abbreviation: category.abbreviation,
                        included: DATA_DEFAULTS.categories.includes(group.abbreviation),
                    }))
                })),
            }
        },
        usage: {
            initialized: false,
            codepoints: []
        },
        unicode: {
            initialized: false,
            codepoints: []
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdGlhbGl6YXRpb25EYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5pdGlhbGl6YXRpb25EYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxlQUFlLEVBQVcsTUFBTSw0QkFBNEIsQ0FBQztBQUNyRSxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUMsNEJBQTRCLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQVMxRSxNQUFNLGFBQWEsR0FBc0I7SUFDckMsTUFBTSxFQUFFO1FBQ0osQ0FBQztRQUNELEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLE1BQU07UUFDTixNQUFNO1FBQ04sS0FBSztLQUNSO0lBQ0QsVUFBVSxFQUFFO1FBQ1IsR0FBRztRQUNILE9BQU87UUFDUCxHQUFHO1FBQ0gsR0FBRztRQUNILEdBQUc7UUFDSCxPQUFPO1FBQ1AsT0FBTztLQUNWO0NBQ0osQ0FBQTtBQUVELE1BQU0sVUFBVSxrQkFBa0I7SUFDOUIsT0FBTztRQUNILFdBQVcsRUFBRSxLQUFLO1FBQ2xCLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLFFBQVEsRUFBRTtZQUNOLFdBQVcsRUFBRSxLQUFLO1lBQ2xCLFFBQVEsRUFBRSxLQUFLO1lBQ2YsTUFBTSxFQUFFO2dCQUNKLE1BQU0sRUFBRSxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxpQ0FDakMsS0FBSyxDQUFDLFFBQVEsS0FDakIsTUFBTSxFQUFFLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsaUNBQzNCLEtBQUssQ0FBQyxRQUFRLEtBQ2pCLFFBQVEsRUFBRSxhQUFhLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQzVELENBQUMsSUFDTCxDQUFDO2dCQUNILGNBQWMsRUFBRSw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO29CQUN2RCxZQUFZLEVBQUUsS0FBSyxDQUFDLFlBQVk7b0JBQ2hDLFVBQVUsRUFBRSxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7d0JBQzFDLFlBQVksRUFBRSxRQUFRLENBQUMsWUFBWTt3QkFDbkMsUUFBUSxFQUFFLGFBQWEsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUM7cUJBQ2xFLENBQUMsQ0FBQztpQkFDTixDQUFDLENBQUM7YUFDTjtTQUNKO1FBQ0QsS0FBSyxFQUFFO1lBQ0gsV0FBVyxFQUFFLEtBQUs7WUFDbEIsVUFBVSxFQUFFLEVBQUU7U0FDakI7UUFDRCxPQUFPLEVBQUU7WUFDTCxXQUFXLEVBQUUsS0FBSztZQUNsQixVQUFVLEVBQUUsRUFBRTtTQUNqQjtLQUNKLENBQUE7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDVVJSRU5UX1ZFUlNJT04sIFNhdmVEYXRhfSBmcm9tIFwiLi4vdHlwZXMvc2F2ZWRhdGEvc2F2ZURhdGFcIjtcbmltcG9ydCB7VU5JQ09ERV9QTEFORVNfQUxMfSBmcm9tIFwiLi91bmljb2RlUGxhbmVzXCI7XG5pbXBvcnQge1VOSUNPREVfQ0hBUkFDVEVSX0NBVEVHT1JJRVN9IGZyb20gXCIuL3VuaWNvZGVDaGFyYWN0ZXJDYXRlZ29yaWVzXCI7XG5pbXBvcnQge1VuaWNvZGVQbGFuZU51bWJlcn0gZnJvbSBcIi4vdW5pY29kZVBsYW5lTnVtYmVyXCI7XG5pbXBvcnQge0NoYXJhY3RlckNhdGVnb3J5R3JvdXBUeXBlfSBmcm9tIFwiLi9jaGFyYWN0ZXJDYXRlZ29yeUdyb3VwXCI7XG5cbnR5cGUgSW5jbHVzaW9uRGVmYXVsdHMgPSB7XG4gICAgcGxhbmVzOiBVbmljb2RlUGxhbmVOdW1iZXJbXSxcbiAgICBjYXRlZ29yaWVzOiBDaGFyYWN0ZXJDYXRlZ29yeUdyb3VwVHlwZVtdLFxufTtcblxuY29uc3QgREFUQV9ERUZBVUxUUzogSW5jbHVzaW9uRGVmYXVsdHMgPSB7XG4gICAgcGxhbmVzOiBbXG4gICAgICAgIDAsXG4gICAgICAgIC8vIDEsXG4gICAgICAgIC8vIDIsXG4gICAgICAgIC8vIDMsXG4gICAgICAgIC8vIDE0LFxuICAgICAgICAvLyAxNSxcbiAgICAgICAgLy8gMTZcbiAgICBdLFxuICAgIGNhdGVnb3JpZXM6IFtcbiAgICAgICAgXCJMXCIsXG4gICAgICAgIC8vIFwiTVwiLFxuICAgICAgICBcIk5cIixcbiAgICAgICAgXCJQXCIsXG4gICAgICAgIFwiU1wiLFxuICAgICAgICAvLyBcIlpcIixcbiAgICAgICAgLy8gXCJDXCIsXG4gICAgXSxcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxpemF0aW9uRGF0YSgpOiBTYXZlRGF0YSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5pdGlhbGl6ZWQ6IGZhbHNlLFxuICAgICAgICB2ZXJzaW9uOiBDVVJSRU5UX1ZFUlNJT04sXG4gICAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgICAgICBpbml0aWFsaXplZDogZmFsc2UsXG4gICAgICAgICAgICBtb2RpZmllZDogZmFsc2UsXG4gICAgICAgICAgICBmaWx0ZXI6IHtcbiAgICAgICAgICAgICAgICBwbGFuZXM6IFVOSUNPREVfUExBTkVTX0FMTC5tYXAocGxhbmUgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgLi4ucGxhbmUuaW50ZXJ2YWwsXG4gICAgICAgICAgICAgICAgICAgIGJsb2NrczogcGxhbmUuYmxvY2tzLm1hcChibG9jayA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4uYmxvY2suaW50ZXJ2YWwsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmNsdWRlZDogREFUQV9ERUZBVUxUUy5wbGFuZXMuaW5jbHVkZXMocGxhbmUucGxhbmVOdW1iZXIpLFxuICAgICAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnlHcm91cHM6IFVOSUNPREVfQ0hBUkFDVEVSX0NBVEVHT1JJRVMubWFwKGdyb3VwID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIGFiYnJldmlhdGlvbjogZ3JvdXAuYWJicmV2aWF0aW9uLFxuICAgICAgICAgICAgICAgICAgICBjYXRlZ29yaWVzOiBncm91cC5jYXRlZ29yaWVzLm1hcChjYXRlZ29yeSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgYWJicmV2aWF0aW9uOiBjYXRlZ29yeS5hYmJyZXZpYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmNsdWRlZDogREFUQV9ERUZBVUxUUy5jYXRlZ29yaWVzLmluY2x1ZGVzKGdyb3VwLmFiYnJldmlhdGlvbiksXG4gICAgICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdXNhZ2U6IHtcbiAgICAgICAgICAgIGluaXRpYWxpemVkOiBmYWxzZSxcbiAgICAgICAgICAgIGNvZGVwb2ludHM6IFtdXG4gICAgICAgIH0sXG4gICAgICAgIHVuaWNvZGU6IHtcbiAgICAgICAgICAgIGluaXRpYWxpemVkOiBmYWxzZSxcbiAgICAgICAgICAgIGNvZGVwb2ludHM6IFtdXG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=